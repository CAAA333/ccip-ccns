/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CCIPLocalSimulator,
  CCIPLocalSimulatorInterface,
} from "../../contracts/CCIPLocalSimulator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_routerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "configuration",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161026d38038061026d833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610156806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633268cc561461003b5780636c70bee914610059575b600080fd5b610043610077565b6040516100509190610105565b60405180910390f35b61006161009b565b60405161006e9190610105565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ef826100c4565b9050919050565b6100ff816100e4565b82525050565b600060208201905061011a60008301846100f6565b9291505056fea2646970667358221220a988e36077f76510464b05b9c2bf9b5f61bd6eb3aa6a419d0a4527c7d2c61e5664736f6c63430008130033";

type CCIPLocalSimulatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCIPLocalSimulatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCIPLocalSimulator__factory extends ContractFactory {
  constructor(...args: CCIPLocalSimulatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _routerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CCIPLocalSimulator> {
    return super.deploy(
      _routerAddress,
      overrides || {}
    ) as Promise<CCIPLocalSimulator>;
  }
  override getDeployTransaction(
    _routerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_routerAddress, overrides || {});
  }
  override attach(address: string): CCIPLocalSimulator {
    return super.attach(address) as CCIPLocalSimulator;
  }
  override connect(signer: Signer): CCIPLocalSimulator__factory {
    return super.connect(signer) as CCIPLocalSimulator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCIPLocalSimulatorInterface {
    return new utils.Interface(_abi) as CCIPLocalSimulatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CCIPLocalSimulator {
    return new Contract(address, _abi, signerOrProvider) as CCIPLocalSimulator;
  }
}
